// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package xsocks

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// XSocksClient is the client API for XSocks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type XSocksClient interface {
}

type xSocksClient struct {
	cc grpc.ClientConnInterface
}

func NewXSocksClient(cc grpc.ClientConnInterface) XSocksClient {
	return &xSocksClient{cc}
}

// XSocksServer is the server API for XSocks service.
// All implementations must embed UnimplementedXSocksServer
// for forward compatibility
type XSocksServer interface {
	mustEmbedUnimplementedXSocksServer()
}

// UnimplementedXSocksServer must be embedded to have forward compatible implementations.
type UnimplementedXSocksServer struct {
}

func (UnimplementedXSocksServer) mustEmbedUnimplementedXSocksServer() {}

// UnsafeXSocksServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to XSocksServer will
// result in compilation errors.
type UnsafeXSocksServer interface {
	mustEmbedUnimplementedXSocksServer()
}

func RegisterXSocksServer(s grpc.ServiceRegistrar, srv XSocksServer) {
	s.RegisterService(&XSocks_ServiceDesc, srv)
}

// XSocks_ServiceDesc is the grpc.ServiceDesc for XSocks service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var XSocks_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "interface.XSocks",
	HandlerType: (*XSocksServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "proto/xsocks/interface.proto",
}
